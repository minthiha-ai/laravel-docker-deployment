name: Laravel Full CI/CD with Docker & DigitalOcean

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  APP_NAME: laravel-app
  DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/user-service-app:latest
  PROJECT_DIR: /var/www/user-service

jobs:
  build-and-test:
    name: 🏗 Build, Test & Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v3

      - name: 🛠 Set up PHP & Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer

      - name: 📦 Install Dependencies
        run: |
          cd src
          composer install --prefer-dist --no-interaction --optimize-autoloader

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: 🔑 Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 📦 Build and Push Docker Image (With Caching)
        run: |
          docker build --cache-from=type=registry,ref=$DOCKER_IMAGE:latest \
          --build-arg APP_ENV=production -t $DOCKER_IMAGE:latest -f php/Dockerfile .
          docker push $DOCKER_IMAGE:latest

  deploy:
    name: 🚀 Fully Automated Deployment to DigitalOcean
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: 📤 Deploy & Setup Server via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DO_SERVER_IP }}
          username: ${{ secrets.DO_SSH_USER }}
          key: ${{ secrets.DO_SSH_KEY }}
          script: |
            echo "🚀 Starting Deployment..."

            # Export environment variables
            export DOCKER_IMAGE="${{ secrets.DOCKER_USERNAME }}/user-service-app:latest"
            export MYSQL_ROOT_PASSWORD="${{ secrets.MYSQL_ROOT_PASSWORD }}"
            export MYSQL_DATABASE="${{ secrets.MYSQL_DATABASE }}"
            export MYSQL_USER="${{ secrets.MYSQL_USER }}"
            export MYSQL_PASSWORD="${{ secrets.MYSQL_PASSWORD }}"

            # Set project directory
            export PROJECT_DIR="/var/www/user-service"
            echo "📂 Using PROJECT_DIR: $PROJECT_DIR"

            # Ensure project directory exists
            if [ ! -d "$PROJECT_DIR" ]; then
              echo "📂 Creating project directory..."
              sudo mkdir -p $PROJECT_DIR
              sudo chown -R $(whoami):$(whoami) $PROJECT_DIR
            else
              echo "✅ Project directory already exists: $PROJECT_DIR"
            fi

            cd $PROJECT_DIR

            # Install dependencies if not installed
            if ! command -v docker &> /dev/null; then
              echo "🐳 Installing Docker..."
              sudo apt update && sudo apt install -y docker.io docker-compose
              sudo usermod -aG docker $USER
              sudo systemctl restart docker
            fi

            # Ensure correct repository state
            if [ ! -d ".git" ]; then
                echo "📥 Cloning Repository..."
                git clone https://github.com/minthiha-ai/laravel-docker-deployment.git .
            else
                echo "📥 Pulling Latest Code..."
                git reset --hard origin/main
                git pull --rebase origin main
            fi

            # Ensure deploy.sh exists & is executable
            if [ ! -f "deployment/deploy.sh" ]; then
                echo "❌ Error: deploy.sh not found!"
                exit 1
            fi

            chmod +x deployment/deploy.sh
            echo "🚀 Running deploy.sh..."
            bash deployment/deploy.sh

            echo "✅ Deployment process completed!"
